name: tmp

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      set_kernel:
        description: "KERNEL: 5.4 / 5.10 / 5.15 / 5.16 / 5.17"
        required: true
        default: ""    
env:
  BUILD_DIR: /tmp/kernel
  SERVERCHAN_SCKEY: true
  TOOLCHAIN_URL: https://snapshots.linaro.org/gnu-toolchain/12.0-2022.02-1/aarch64-linux-gnu
  TOOLCHAIN: gcc-linaro-12.0.1-2022.02-x86_64_aarch64-linux-gnu.tar.xz
  ARMBIAN_VER: Armbian_22.02.0_Aml_s905d_bullseye_5.10.100_2022.02.12.0039
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: choose kernel
      run: |
        set_kernel="${{ github.event.inputs.set_kernel }}"
        if [ "$set_kernel" = "5.4" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.4.y.git" >> $GITHUB_ENV
            echo "KVER=5.4.y" >> $GITHUB_ENV
        elif [ "$set_kernel" = "5.10" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.10.y.git" >> $GITHUB_ENV
            echo "KVER=5.10.y" >> $GITHUB_ENV
        elif [ "$set_kernel" = "5.15" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.15.y.git" >> $GITHUB_ENV
            echo "KVER=5.15.y" >> $GITHUB_ENV
        elif [ "$set_kernel" = "5.16" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.16.y.git" >> $GITHUB_ENV
            echo "KVER=5.16.y" >> $GITHUB_ENV
        elif [ "$set_kernel" = "5.17" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.17.y.git" >> $GITHUB_ENV
            echo "KVER=5.17.y" >> $GITHUB_ENV
        fi
        
    - name: telegrame_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
          您正在使用kissyouhunter仓库编译 ${{ github.event.inputs.set_kernel }} 内核,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi

    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Host info
      run: |
        pwd
        ls -lah
        lscpu
        free -h
        df -h 

    - name: Initialization environment
      env:
         DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-server)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean 
    
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}  
        
    - name: Clone repos
      run: |
        git clone $REPO_URL $BUILD_DIR
        
    - name: Installing cross compile toolchain
      run: |
        cd /opt
        sudo wget $TOOLCHAIN_URL/$TOOLCHAIN
        sudo tar -xvf $TOOLCHAIN
        cd $BUILD_DIR
        rm -f set_*
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_clean set_clean -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_dtb set_dtb -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_make set_make -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_menuconfig set_menuconfig -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/.config .config -v
        chmod 755 set_*
             
    - name: Build Kernel  
      run: |
        cd $BUILD_DIR                    
        ./set_make

    - name: Organize files
      id: organize
      run: |
        cd /tmp && mv kernel/ linux-${KVER} && tar -zcvf linux-${KVER}.tar.gz linux-${KVER}/
        sudo mkdir -p /tmp/upload
        sudo mv -v linux-${KVER}.tar.gz /tmp/upload/
        cd /tmp/upload && sudo chmod -R 777 /tmp/upload/
        echo "KERNEL=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload kernel directory
      uses: kittaakos/upload-artifact-as-is@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        path: ${{ env.KERNEL }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 4
        
    - name: telegram_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
          您使用kissyouhunter仓库编译 ${{ github.event.inputs.set_kernel }} 内核顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
