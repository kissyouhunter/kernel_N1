name: S905D KERNEL

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      set_kernel:
        description: "KERNEL: 5.4 / 5.10 / 5.15 / 5.16"
        required: true
        default: ""
      set_number:
        description: "NUMBER: 5.4.x / 5.10.x / 5.15.x / 5.16.x"
        required: true
        default: ""        
env:
  BUILD_DIR: /tmp/kernel
  SERVERCHAN_SCKEY: true
  TOOLCHAIN_URL: https://snapshots.linaro.org/gnu-toolchain/12.0-2022.02-1/aarch64-linux-gnu
  TOOLCHAIN: gcc-linaro-12.0.1-2022.02-x86_64_aarch64-linux-gnu.tar.xz
  ARMBIAN_VER: Armbian_22.02.0_Aml_s905d_bullseye_5.10.100_2022.02.12.0039
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: choose kernel
      run: |
        set_kernel="${{ github.event.inputs.set_kernel }}"
        if [ "$set_kernel" = "5.4" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.4.y.git" >> $GITHUB_ENV
            echo "KVER=5.4.y" >> $GITHUB_ENV
        elif [ "$set_kernel" = "5.10" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.10.y.git" >> $GITHUB_ENV
            echo "KVER=5.10.y" >> $GITHUB_ENV
        elif [ "$set_kernel" = "5.15" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.15.y.git" >> $GITHUB_ENV
            echo "KVER=5.15.y" >> $GITHUB_ENV
        elif [ "$set_kernel" = "5.16" ]; then
            echo "REPO_URL=https://github.com/unifreq/linux-5.16.y.git" >> $GITHUB_ENV
            echo "KVER=5.16.y" >> $GITHUB_ENV
        fi
        set_number="${{ github.event.inputs.set_number }}"
        echo "KERNEL_NUMBER=${set_number}" >> $GITHUB_ENV
        
    - name: telegrame_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
          您正在使用kissyouhunter仓库编译 ${{ github.event.inputs.set_number }} 内核,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi

    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Host info
      run: |
        pwd
        ls -lah
        lscpu
        free -h
        df -h 

    - name: Initialization environment
      run: |
        sudo apt update
        sudo apt upgrade -y build-essential crossbuild-essential-arm64 pkg-config-aarch64-linux-gnu llvm llvm-dev lld libc6-dev-arm64-cross libatomic1-arm64-cross libgcc-8-dev-arm64-cross libgcc-10-dev-arm64-cross clang qemu-user-static binfmt-support make gcc gcc-aarch64-linux-gnu gcc-10-aarch64-linux-gnu libc6-dev pkg-config netfilter-persistent xz-utils lzma rename tar openssl libidn11-dev libncurses-dev minizip bc zlibc asciidoc binutils bzip2 gawk ninja-build u-boot-tools gettext git fakeroot libncurses5-dev libz-dev patch python3 python2.7 pigz zstd zip unzip lz4 ccache zlib1g-dev btrfs-progs bison uuid uuid-dev uuid-runtime mount parted util-linux dosfstools subversion flex uglifyjs libpixman-1-dev git-core gzip p7zip p7zip-full msmtp libssl-dev vim busybox texinfo libglib2.0-dev xmlto qemu-utils qemu qemu-system qemu-user libidn11 initramfs-tools gdb-multiarch upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf wget curl swig rsync
    
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}  
        
    - name: Clone repos
      run: |
        git clone $REPO_URL $BUILD_DIR
        
    - name: Installing cross compile toolchain
      run: |
        cd /opt
        sudo wget $TOOLCHAIN_URL/$TOOLCHAIN
        sudo tar -xvf $TOOLCHAIN
        cd $BUILD_DIR
        rm -f set_*
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_clean set_clean -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_dtb set_dtb -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_make set_make -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/set_menuconfig set_menuconfig -v
        cp $GITHUB_WORKSPACE/files/linux-${KVER}/.config .config -v
        chmod 755 set_*
             
    - name: Build Kernel  
      run: |
        cd $BUILD_DIR                    
        ./set_make

    - name: Extract Kernel
      run: |
        cd /tmp && mv kernel/ linux-${KVER} && tar -zcvf linux-${KVER}.tar.gz linux-${KVER}/
        mkdir -p /tmp/upload/${KERNEL_NUMBER} && mv /tmp/linux-${KVER}.tar.gz /tmp/upload && cd /tmp/upload
        curl -LO https://github.com/kissyouhunter/kernel_N1/releases/download/armbian/${ARMBIAN_VER}.img.gz
        gzip -d ${ARMBIAN_VER}.img.gz
        loop_armbian=$(sudo losetup -P -f --show "${ARMBIAN_VER}.img")
        sudo mount ${loop_armbian}p2 /mnt/ && sudo mount ${loop_armbian}p1 /mnt/boot/
        sudo mv /tmp/upload/linux-${KVER}.tar.gz /mnt/root/ -v && sudo cp $GITHUB_WORKSPACE/install_kernel.sh /mnt/root/install_kernel.sh -v
        sudo chmod +x /mnt/root/install_kernel.sh
        sudo sed -i 's|n1kernel|'"$KERNEL_NUMBER"'|g' /mnt/root/install_kernel.sh
        sudo sed -i 's|kernelnumber|'"$KVER"'|g' /mnt/root/install_kernel.sh
        sudo chroot /mnt /bin/bash -c "./root/install_kernel.sh"

    - name: Organize files
      id: organize
      run: |
        sudo cp /mnt/root/boot-${KERNEL_NUMBER}-kissyouhunter.tar.gz /tmp/upload/${KERNEL_NUMBER}
        sudo cp /mnt/root/dtb-amlogic-${KERNEL_NUMBER}-kissyouhunter.tar.gz /tmp/upload/${KERNEL_NUMBER}
        sudo cp /mnt/root/modules-${KERNEL_NUMBER}-kissyouhunter.tar.gz /tmp/upload/${KERNEL_NUMBER}
        cd /tmp/upload/ && tar -zcvf ${KERNEL_NUMBER}.tar.gz ${KERNEL_NUMBER}
        rm -rf ${KERNEL_NUMBER} && rm -f ${ARMBIAN_VER}.img
        cd /tmp/upload && sudo chmod -R 777 .
        rm -f ${ARMBIAN_VER}.img
        echo "KERNEL=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload kernel directory
      uses: kittaakos/upload-artifact-as-is@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        path: ${{ env.KERNEL }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 4
        
    - name: telegram_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
          您使用kissyouhunter仓库编译 ${{ github.event.inputs.set_number }} 内核顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
